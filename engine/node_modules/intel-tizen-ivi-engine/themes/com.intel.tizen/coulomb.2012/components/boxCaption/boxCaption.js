/**
 * @namespace com.intel.tizen.coulomb.2012
 **/
(function ($) {
    /**
     * Represents static UI element composed of rectangle and caption that can be used as a section title.
     * @class BoxCaption
     * @constructor
     */
    var BoxCaption = {
            /**
             * Generates and shows default box caption element on the screen.
             * 
             * @method init
             * @param caption {String} Caption text.
             */
            init: function (caption) {
                this.empty();
                var appendText = '<div class="boxIconRectangle bgColorTheme"></div>';
                appendText += '<div class="boxIconCaption fontSizeXSmall fontWeightBold fontColorLight">';
                appendText += caption.toUpperCase();
                appendText += '</div>';
                this.append(appendText);
            },
            /**
             * Generates and shows small box caption element on the screen.
             * 
             * @method initSmall
             * @param caption {String} Caption text.
             */
            initSmall: function (caption) {
                this.empty();
                var appendText = '<div class="boxIconRectangleSmall bgColorTheme"></div>';
                appendText += '<div class="boxIconCaptionSmall fontSizeXXSmall fontWeightBold fontColorLight">';
                appendText += caption.toUpperCase();
                appendText += '</div>';
                this.append(appendText);
            },
            /**
             * Generates and shows small dark box caption element on the screen.
             * 
             * @method initSmallDark
             * @param caption {String} Caption text.
             */
            initSmallDark: function (caption) {
                this.empty();
                var appendText = '<div class="boxIconRectangleSmall bgColorDark"></div>';
                appendText += '<div class="boxIconCaptionSmall fontSizeXXSmall fontWeightBold fontColorDark">';
                appendText += caption.toUpperCase();
                appendText += '</div>';
                this.append(appendText);
            }
        };
    /** 
     * jQuery extension method `com.intel.tizen.coulomb.2012.BoxCaptionPlugin`
     * @param method {Object|jQuery selector} Identificator (name) of method or jQuery selector.
     * @method boxCaptionPlugin
     * @for jQuery
     * @return Result of called method.
     */
    $.fn.boxCaptionPlugin = function (method) {
        // Method calling logic
        if (BoxCaption[method]) {
            return BoxCaption[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return BoxCaption.init.apply(this, arguments);
        } else {
            $.error('Method ' + method + ' does not exist on jQuery.boxCaptionPlugin');
        }
    };
}(jQuery));
