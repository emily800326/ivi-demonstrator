/**
 * @namespace com.intel.tizen.coulomb.2012
 **/

(function ($) {
    /**
     * Class which provides methods to fill content of bottom panel for JQuery plugin.
     * @class BottomPanel
     * @constructor
     * @static
     */
    var BottomPanel = {
            /**
             * Holds current object of this JQuery plugin.
             * @property thisObj {Object}
             */
            thisObj: null,
            /** 
             * Method is initializing bottom panel.
             * @method init
             * @param content {String} If content is undefined then bottom panel doesn't containt back button and background.
             */
            init: function (content) {
                if ((content == null) || (content == undefined)) {
                    this.append('<div class="bottomBackButton bottomBackButtonBackgroundImg" onclick="$(\'#'
                            + this.attr('id') + '\').bottomPanel(\'onBackButtonClick\');">'
                            + '</div>' + '<div class="bottomPanelLogo bottomPanelLogoImg">'
                            + '</div>');
                } else {
                    this.append('<div class="bottomPanelLogo bottomPanelLogoImg">' + '</div>');
                }
                BottomPanel.thisObj = this;
            },
            /** 
             * Method is invoked after click on back button, fires clickOnBackButton event and causes application exit.
             * @method onBackButtonClick
             */
            onBackButtonClick: function () {
                BottomPanel.thisObj.trigger('clickOnBackButton');
                tizen.application.exit();
            }
        };

    /** 
     * jQuery constructor`com.intel.tizen.coulomb.2012.BottomPanel`
     * @param method {Object|jQuery selector} Identificator (name) of method or jQuery selector.
     * @for jQuery
     * @method bottomPanel
     * @return Result of called method.
     */
    $.fn.bottomPanel = function (method) {
        // Method calling logic
        if (BottomPanel[method]) {
            return BottomPanel[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return BottomPanel.init.apply(this, arguments);
        } else {
            $.error('Method ' +  method + ' does not exist on jQuery.infoPanelAPI');
        }
    };
}(jQuery));
