var ApiEndpointBase;
(function (ApiEndpointBase) {
    ApiEndpointBase.source;
    ApiEndpointBase.listeners = [];
    function eventSourceCallback(e) {
        try  {
            var dataObject = (typeof e.data == 'string') ? JSON.parse(e.data) : e.data;
            console.info("Message arrived:", dataObject);
            if(dataObject.source == "global") {
                console.info("Global message arrived:" + JSON.stringify(dataObject.message));
            } else {
                var found = false;
                ApiEndpointBase.listeners.forEach(function (listener) {
                    if(listener.source == dataObject.source) {
                        listener.callback(dataObject.message);
                        found = true;
                    }
                });
                if(!found) {
                    console.warn("No EventSource listener found for source: " + dataObject.source);
                }
            }
        } catch (ex) {
            console.error(ex);
        }
    }
    function addIviEventSourceListener(aPort, aMessageSource, aCallback) {
        if(!ApiEndpointBase.source) {
            var basePath = window.location.protocol + "//" + window.location.host + "/ivi-events?salt=" + new Date().getTime();
            console.info("First call to service, creating EventSource stream for: " + basePath);
            if(!!window.EventSource) {
                ApiEndpointBase.source = new EventSource(basePath);
                ApiEndpointBase.source.onmessage = eventSourceCallback;
            } else {
                console.error("EventSource is not supported.");
            }
        }
        var firstInstance = true;
        ApiEndpointBase.listeners.forEach(function (listener) {
            if(listener.source == aMessageSource) {
                firstInstance = false;
                return true;
            }
        });
        ApiEndpointBase.listeners.push({
            source: aMessageSource,
            callback: aCallback
        });
        return firstInstance;
    }
    ApiEndpointBase.addIviEventSourceListener = addIviEventSourceListener;
})(ApiEndpointBase || (ApiEndpointBase = {}));
